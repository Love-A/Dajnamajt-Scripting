<# 
.Synopsis
    This will set the TSValue 'ORG'
    

.DESCRIPTION
    This is used to set the TSValue 'ORG', used to later in the TS for eg DeviceBranding, specific app installation, or OU transfer.

    Just change the 'ORGANISATION' in ListBox.Items "[VOID]$WPFListBox.Items.Add('ORGANISATION01')" to whatever you want each org to be named. You can also just copy one row and change it to add more choices.
    
     " $WPFDescription.Text = 'Choose Organisation' "
     Change this to change the top text
     
     " $WPFRunButton.Content = 'Start Installation' "
     Change this for the Start button, if you want it to say something else.
     
.EXAMPLE
    PS > Set-Organisation.ps1

.NOTES

	    FileName:  Set-Organisation.ps1
	  
	    Author:  Love Arvidsson
	
	    Contact: Love.Arvidsson@norrkoping.se
	
	    Created: 2020-05-20 
	
	    Updated: 
	

    Version history:
    
    1.0 - (2020-05-20) Script created
 
#>



#region Load Pre-req
    
    Add-Type -AssemblyName PresentationFramework
    Add-Type -AssemblyName System.Windows.Forms
#endregion

#region VisualStudio XAML
#===========================================================================
$InputXML = @"
<Window x:Name="Set_Organisation" x:Class="Set_Org_Core.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Set_Org_Core"
        mc:Ignorable="d"
        Title="Set Organisation" Height="340" Width="470" Background="#FF19ADE4" WindowStartupLocation="CenterScreen" Topmost="True" ResizeMode="NoResize" WindowStyle="None">
    <Grid>
        <Button x:Name="RunButton" Content="Button" HorizontalAlignment="Center" Margin="0,290,0,0" VerticalAlignment="Top" Width="250" Height="36"/>
        <TextBox x:Name="Description" HorizontalAlignment="Center" Margin="0,30,0,0" Text="TextBox" TextWrapping="Wrap" VerticalAlignment="Top" Width="300" Height="20" Background="White" FontWeight="Bold"/>
        <ListBox x:Name="ListBox" HorizontalAlignment="Center" Width="300" Height="230" VerticalAlignment="Center"/>
    </Grid>
</Window>
"@

# Rewrite XAML

    $inputXML = $inputXML -replace '\s{1}[\w\d_-]+="{x:Null}"',''
    $inputXML = $inputXML -replace 'mc:Ignorable="d"', '' -replace "x:N", 'N' -replace '^<Win.*', '<Window'
    $inputXML = $inputXML -replace 'TextChanged="[\w\d-]+\w"',''
    $inputXML = $inputXML -replace 'SelectionChanged="[\w\d-]+\w"',''
    $inputXML = $inputXML -replace ' Selected="[\w\d-]+\w"',''
    $inputXML = $inputXML -replace ' Click="[\w\d-]+"',''
    $inputXML = $inputXML -replace 'Checked="CheckBox_Checked" ',''
    $inputXML = $inputXML -replace 'Checked="RadioButton_Checked" ',''

    [xml]$xaml = $inputXML
    $reader = (New-Object System.Xml.XmlNodeReader $xaml)
    try {
        $Form = [Windows.Markup.XamlReader]::Load( $reader )
    }
    catch {
        Write-Warning $_.Exception
        throw
    }
    
    $xaml.SelectNodes("//*[@Name]") | ForEach-Object {
        try {
            Set-Variable -Name "WPF$($_.Name)" -Value $Form.FindName($_.Name) -ErrorAction Stop
        }
        catch {throw}
    }
#===========================================================================
#endregion VS XAML

#region Load XAML Objects In PowerShell
#===========================================================================

 
Function Get-FormVariables{
if ($global:ReadmeDisplay -ne $true){Write-host "If you need to reference this display again, run Get-FormVariables" -ForegroundColor Yellow;$global:ReadmeDisplay=$true}
get-variable WPF*
}
 
Get-FormVariables

#===========================================================================
#endregion Load XAML Objects In PowerShell


#===========================================================================
# Element Code
#===========================================================================

# Construct TS Env

    $TSEnvironment = New-Object -ComObject Microsoft.SMS.TSEnvironment

# Description

    $WPFDescription.Text = 'Choose Organisation'
    $WPFDescription.FontSize = '12'

# Add ListBox Items

    [VOID]$WPFListBox.Items.Add('ORGANISATION01')
    [VOID]$WPFListBox.Items.Add('ORGANISATION02')
    [VOID]$WPFListBox.Items.Add('ORGANISATION03')


# RunButton
     
     # Text
     $WPFRunButton.Content = 'Start Installation'
     
     # Function   
     $WPFRunButton.Add_Click({
     $TSEnvironment.Value("ORG") = $WPFListBox.SelectedItem
     $Form.Close()
     })

#===========================================================================
# Shows the form
#===========================================================================

[void]$Form.ShowDialog()
